import asyncio
from aiohttp import FormData as FormData
from slack.web.slack_response import SlackResponse as SlackResponse
from typing import Any, Optional, Union

class BaseClient:
    BASE_URL: str = ...
    token: Any = ...
    base_url: Any = ...
    timeout: Any = ...
    ssl: Any = ...
    proxy: Any = ...
    run_async: Any = ...
    session: Any = ...
    headers: Any = ...
    def __init__(self, token: Any=..., base_url: Any=..., timeout: Any=..., loop: Optional[asyncio.AbstractEventLoop]=..., ssl: Any=..., proxy: Any=..., run_async: Any=..., session: Any=..., headers: Optional[dict]=...) -> None: ...
    def api_call(self, api_method: str, *, http_verb: str=..., files: dict=..., data: Union[dict, FormData]=..., params: dict=..., json: dict=..., headers: dict=..., auth: dict=...) -> Union[asyncio.Future, SlackResponse]: ...
    @staticmethod
    def validate_slack_signature(signing_secret: str, data: str, timestamp: str, signature: str) -> bool: ...
